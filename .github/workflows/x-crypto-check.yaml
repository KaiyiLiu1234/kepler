name: Check golang.org/x/crypto Dependencies

on:
  workflow_call:
    inputs:
      base_ref:
        description: 'Base branch ref for comparison'
        required: true
        type: string
      head_sha:
        description: 'PR head SHA'
        required: true
        type: string

jobs:
  check-x-crypto-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod

      - name: Get base branch dependencies
        run: |
          git checkout ${{ inputs.base_ref }}
          go mod tidy
          go mod graph > deps-base.txt

      - name: Get PR branch dependencies
        run: |
          git checkout ${{ inputs.head_sha }}
          go mod tidy
          go mod graph > deps-pr.txt

      - name: Analyze crypto dependencies
        shell: bash
        run: |
          echo "=== Dependency Report ==="
          echo ""

          # Check dependencies prior to PR
          echo "Current Kepler dependencies on golang.org/x/crypto:"
          if grep -q " golang.org/x/crypto@" deps-base.txt; then
            echo "::warning::Kepler already depends on golang.org/x/crypto through:"
            grep " golang.org/x/crypto@" deps-base.txt | sed 's/^/ ðŸ”¹ /'
          else
            echo "âœ… No existing dependency on golang.org/x/crypto found in base branch"
          fi

          echo ""

          # Check for new dependencies introduced by PR
          echo "Changes introduced by this PR:"
          if ! grep -q " golang.org/x/crypto@" deps-pr.txt; then
            echo "âœ… PR does not introduce any new dependencies on golang.org/x/crypto"
          else
            new_deps=$(comm -13 <(sort deps-base.txt) <(sort deps-pr.txt) | grep " golang.org/x/crypto@" || true)
            if [ -z "$new_deps" ]; then
              echo "::notice::PR doesn't add new x/crypto dependencies (note it is possible this PR depends on existing x/crypto dependencies)"
            else
              echo "::warning::PR introduces new dependencies on golang.org/x/crypto:"
              echo "$new_deps" | sed 's/^/ ðŸ”¹ /'
              echo ""
            fi
          fi

          echo ""

          # Check for direct imports of x/crypto
          # git checkout ${{ inputs.head_sha }}
          # go mod tidy
          
          # echo "Checking for new imports of golang.org/x/crypto"
          # matches=$(grep -R "golang.org/x/crypto" . --include=*.go)
          # echo "$matches" | sed 's/^/- /' || echo "âœ… No new source usage found"

          # occurrences=$(grep -R "golang.org/x/crypto" . --include=*.go)
          # if [ -z "$occurrences" ]; then
            # echo "âœ… No direct imports of golang.org/x/crypto found"
          # else
            # echo "::warning::Discovered direct imports of golang.org/x/crypto:" 
            # echo "$occurrences" | sed 's/^/ ðŸ”¹ /'
          # fi

          echo ""
          echo "=== End of Report ==="
